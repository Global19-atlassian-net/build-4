// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/v1/build.proto

package v1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GoProjectType int32

const (
	GoProjectType_GO_MOD GoProjectType = 0
	GoProjectType_DEP    GoProjectType = 1
)

var GoProjectType_name = map[int32]string{
	0: "GO_MOD",
	1: "DEP",
}

var GoProjectType_value = map[string]int32{
	"GO_MOD": 0,
	"DEP":    1,
}

func (x GoProjectType) String() string {
	return proto.EnumName(GoProjectType_name, int32(x))
}

func (GoProjectType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{0}
}

type BuildRun struct {
	Spec                 *BuildSpec      `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Config               *BuildRunConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BuildRun) Reset()         { *m = BuildRun{} }
func (m *BuildRun) String() string { return proto.CompactTextString(m) }
func (*BuildRun) ProtoMessage()    {}
func (*BuildRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{0}
}
func (m *BuildRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRun.Unmarshal(m, b)
}
func (m *BuildRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRun.Marshal(b, m, deterministic)
}
func (m *BuildRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRun.Merge(m, src)
}
func (m *BuildRun) XXX_Size() int {
	return xxx_messageInfo_BuildRun.Size(m)
}
func (m *BuildRun) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRun.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRun proto.InternalMessageInfo

func (m *BuildRun) GetSpec() *BuildSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *BuildRun) GetConfig() *BuildRunConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

// This contains a few extra things at build time
type BuildRunConfig struct {
	BuildEnvVars         *BuildEnvVars      `protobuf:"bytes,1,opt,name=build_env_vars,json=buildEnvVars,proto3" json:"build_env_vars,omitempty"`
	ComputedBuildVars    *ComputedBuildVars `protobuf:"bytes,2,opt,name=computed_build_vars,json=computedBuildVars,proto3" json:"computed_build_vars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BuildRunConfig) Reset()         { *m = BuildRunConfig{} }
func (m *BuildRunConfig) String() string { return proto.CompactTextString(m) }
func (*BuildRunConfig) ProtoMessage()    {}
func (*BuildRunConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{1}
}
func (m *BuildRunConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildRunConfig.Unmarshal(m, b)
}
func (m *BuildRunConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildRunConfig.Marshal(b, m, deterministic)
}
func (m *BuildRunConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildRunConfig.Merge(m, src)
}
func (m *BuildRunConfig) XXX_Size() int {
	return xxx_messageInfo_BuildRunConfig.Size(m)
}
func (m *BuildRunConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildRunConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BuildRunConfig proto.InternalMessageInfo

func (m *BuildRunConfig) GetBuildEnvVars() *BuildEnvVars {
	if m != nil {
		return m.BuildEnvVars
	}
	return nil
}

func (m *BuildRunConfig) GetComputedBuildVars() *ComputedBuildVars {
	if m != nil {
		return m.ComputedBuildVars
	}
	return nil
}

type BuildEnvVars struct {
	BuildId              string   `protobuf:"bytes,1,opt,name=build_id,json=buildId,proto3" json:"build_id,omitempty"`
	TaggedVersion        string   `protobuf:"bytes,2,opt,name=tagged_version,json=taggedVersion,proto3" json:"tagged_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildEnvVars) Reset()         { *m = BuildEnvVars{} }
func (m *BuildEnvVars) String() string { return proto.CompactTextString(m) }
func (*BuildEnvVars) ProtoMessage()    {}
func (*BuildEnvVars) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{2}
}
func (m *BuildEnvVars) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildEnvVars.Unmarshal(m, b)
}
func (m *BuildEnvVars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildEnvVars.Marshal(b, m, deterministic)
}
func (m *BuildEnvVars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildEnvVars.Merge(m, src)
}
func (m *BuildEnvVars) XXX_Size() int {
	return xxx_messageInfo_BuildEnvVars.Size(m)
}
func (m *BuildEnvVars) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildEnvVars.DiscardUnknown(m)
}

var xxx_messageInfo_BuildEnvVars proto.InternalMessageInfo

func (m *BuildEnvVars) GetBuildId() string {
	if m != nil {
		return m.BuildId
	}
	return ""
}

func (m *BuildEnvVars) GetTaggedVersion() string {
	if m != nil {
		return m.TaggedVersion
	}
	return ""
}

// Holds all values that are computed at build time according to build conditions
type ComputedBuildVars struct {
	// indicates if this build is a release
	Release bool `protobuf:"varint,1,opt,name=release,proto3" json:"release,omitempty"`
	// the image tag to use for all images created during this build session
	ImageTag string `protobuf:"bytes,2,opt,name=image_tag,json=imageTag,proto3" json:"image_tag,omitempty"`
	// the container repo and organization to be used for all images created during this build session
	// ex: gcr.io/solo-public/
	ContainerPrefix string `protobuf:"bytes,3,opt,name=container_prefix,json=containerPrefix,proto3" json:"container_prefix,omitempty"`
	// the version associated with the source code being built
	// during a release, matches the semver tag
	// during a test build, matches the build id
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// the URI of the repository to be used to publish the helm charts for this build, e.g. gs://supergloo-helm/
	HelmRepository       string   `protobuf:"bytes,5,opt,name=helm_repository,json=helmRepository,proto3" json:"helm_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComputedBuildVars) Reset()         { *m = ComputedBuildVars{} }
func (m *ComputedBuildVars) String() string { return proto.CompactTextString(m) }
func (*ComputedBuildVars) ProtoMessage()    {}
func (*ComputedBuildVars) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{3}
}
func (m *ComputedBuildVars) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComputedBuildVars.Unmarshal(m, b)
}
func (m *ComputedBuildVars) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComputedBuildVars.Marshal(b, m, deterministic)
}
func (m *ComputedBuildVars) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComputedBuildVars.Merge(m, src)
}
func (m *ComputedBuildVars) XXX_Size() int {
	return xxx_messageInfo_ComputedBuildVars.Size(m)
}
func (m *ComputedBuildVars) XXX_DiscardUnknown() {
	xxx_messageInfo_ComputedBuildVars.DiscardUnknown(m)
}

var xxx_messageInfo_ComputedBuildVars proto.InternalMessageInfo

func (m *ComputedBuildVars) GetRelease() bool {
	if m != nil {
		return m.Release
	}
	return false
}

func (m *ComputedBuildVars) GetImageTag() string {
	if m != nil {
		return m.ImageTag
	}
	return ""
}

func (m *ComputedBuildVars) GetContainerPrefix() string {
	if m != nil {
		return m.ContainerPrefix
	}
	return ""
}

func (m *ComputedBuildVars) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ComputedBuildVars) GetHelmRepository() string {
	if m != nil {
		return m.HelmRepository
	}
	return ""
}

type GcloudConfig struct {
	// project_id for repo for all gcloud interactions
	ProjectId        string            `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	DecryptKey       string            `protobuf:"bytes,5,opt,name=decrypt_key,json=decryptKey,proto3" json:"decrypt_key,omitempty"`
	DecryptKeyring   string            `protobuf:"bytes,6,opt,name=decrypt_keyring,json=decryptKeyring,proto3" json:"decrypt_keyring,omitempty"`
	EncryptedSecrets map[string]string `protobuf:"bytes,7,rep,name=encrypted_secrets,json=encryptedSecrets,proto3" json:"encrypted_secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timeout          string            `protobuf:"bytes,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// A location that can be referenced with gsutil, i.e. gsutil cat gs://%go_cache
	GoCache              *GoCache `protobuf:"bytes,9,opt,name=go_cache,json=goCache,proto3" json:"go_cache,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GcloudConfig) Reset()         { *m = GcloudConfig{} }
func (m *GcloudConfig) String() string { return proto.CompactTextString(m) }
func (*GcloudConfig) ProtoMessage()    {}
func (*GcloudConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{4}
}
func (m *GcloudConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcloudConfig.Unmarshal(m, b)
}
func (m *GcloudConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcloudConfig.Marshal(b, m, deterministic)
}
func (m *GcloudConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcloudConfig.Merge(m, src)
}
func (m *GcloudConfig) XXX_Size() int {
	return xxx_messageInfo_GcloudConfig.Size(m)
}
func (m *GcloudConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GcloudConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GcloudConfig proto.InternalMessageInfo

func (m *GcloudConfig) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

func (m *GcloudConfig) GetDecryptKey() string {
	if m != nil {
		return m.DecryptKey
	}
	return ""
}

func (m *GcloudConfig) GetDecryptKeyring() string {
	if m != nil {
		return m.DecryptKeyring
	}
	return ""
}

func (m *GcloudConfig) GetEncryptedSecrets() map[string]string {
	if m != nil {
		return m.EncryptedSecrets
	}
	return nil
}

func (m *GcloudConfig) GetTimeout() string {
	if m != nil {
		return m.Timeout
	}
	return ""
}

func (m *GcloudConfig) GetGoCache() *GoCache {
	if m != nil {
		return m.GoCache
	}
	return nil
}

type GoCache struct {
	Bucket               string   `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoCache) Reset()         { *m = GoCache{} }
func (m *GoCache) String() string { return proto.CompactTextString(m) }
func (*GoCache) ProtoMessage()    {}
func (*GoCache) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{5}
}
func (m *GoCache) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoCache.Unmarshal(m, b)
}
func (m *GoCache) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoCache.Marshal(b, m, deterministic)
}
func (m *GoCache) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoCache.Merge(m, src)
}
func (m *GoCache) XXX_Size() int {
	return xxx_messageInfo_GoCache.Size(m)
}
func (m *GoCache) XXX_DiscardUnknown() {
	xxx_messageInfo_GoCache.DiscardUnknown(m)
}

var xxx_messageInfo_GoCache proto.InternalMessageInfo

func (m *GoCache) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *GoCache) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// This gets checked into project repo
type BuildSpec struct {
	Config               *BuildConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	TestRuns             []*TestRun   `protobuf:"bytes,5,rep,name=test_runs,json=testRuns,proto3" json:"test_runs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BuildSpec) Reset()         { *m = BuildSpec{} }
func (m *BuildSpec) String() string { return proto.CompactTextString(m) }
func (*BuildSpec) ProtoMessage()    {}
func (*BuildSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{6}
}
func (m *BuildSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSpec.Unmarshal(m, b)
}
func (m *BuildSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSpec.Marshal(b, m, deterministic)
}
func (m *BuildSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSpec.Merge(m, src)
}
func (m *BuildSpec) XXX_Size() int {
	return xxx_messageInfo_BuildSpec.Size(m)
}
func (m *BuildSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSpec.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSpec proto.InternalMessageInfo

func (m *BuildSpec) GetConfig() *BuildConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *BuildSpec) GetTestRuns() []*TestRun {
	if m != nil {
		return m.TestRuns
	}
	return nil
}

type BuildConfig struct {
	GoConfig *GoConfig `protobuf:"bytes,1,opt,name=go_config,json=goConfig,proto3" json:"go_config,omitempty"`
	// Types that are valid to be assigned to CiConfig:
	//	*BuildConfig_Gcloud
	CiConfig                 isBuildConfig_CiConfig `protobuf_oneof:"ci_config"`
	ReleaseContainerRegistry *ContainerRegistry     `protobuf:"bytes,20,opt,name=release_container_registry,json=releaseContainerRegistry,proto3" json:"release_container_registry,omitempty"`
	// optional, if not provided, will use the same registry for release and test
	TestContainerRegistry *ContainerRegistry `protobuf:"bytes,21,opt,name=test_container_registry,json=testContainerRegistry,proto3" json:"test_container_registry,omitempty"`
	// target helm repo for release builds
	ReleaseHelmRepository *HelmChartRepository `protobuf:"bytes,30,opt,name=release_helm_repository,json=releaseHelmRepository,proto3" json:"release_helm_repository,omitempty"`
	// target helm repo for non-release builds
	TestHelmRepository   *HelmChartRepository `protobuf:"bytes,31,opt,name=test_helm_repository,json=testHelmRepository,proto3" json:"test_helm_repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BuildConfig) Reset()         { *m = BuildConfig{} }
func (m *BuildConfig) String() string { return proto.CompactTextString(m) }
func (*BuildConfig) ProtoMessage()    {}
func (*BuildConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{7}
}
func (m *BuildConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildConfig.Unmarshal(m, b)
}
func (m *BuildConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildConfig.Marshal(b, m, deterministic)
}
func (m *BuildConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildConfig.Merge(m, src)
}
func (m *BuildConfig) XXX_Size() int {
	return xxx_messageInfo_BuildConfig.Size(m)
}
func (m *BuildConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BuildConfig proto.InternalMessageInfo

type isBuildConfig_CiConfig interface {
	isBuildConfig_CiConfig()
}

type BuildConfig_Gcloud struct {
	Gcloud *GcloudConfig `protobuf:"bytes,10,opt,name=gcloud,proto3,oneof"`
}

func (*BuildConfig_Gcloud) isBuildConfig_CiConfig() {}

func (m *BuildConfig) GetCiConfig() isBuildConfig_CiConfig {
	if m != nil {
		return m.CiConfig
	}
	return nil
}

func (m *BuildConfig) GetGoConfig() *GoConfig {
	if m != nil {
		return m.GoConfig
	}
	return nil
}

func (m *BuildConfig) GetGcloud() *GcloudConfig {
	if x, ok := m.GetCiConfig().(*BuildConfig_Gcloud); ok {
		return x.Gcloud
	}
	return nil
}

func (m *BuildConfig) GetReleaseContainerRegistry() *ContainerRegistry {
	if m != nil {
		return m.ReleaseContainerRegistry
	}
	return nil
}

func (m *BuildConfig) GetTestContainerRegistry() *ContainerRegistry {
	if m != nil {
		return m.TestContainerRegistry
	}
	return nil
}

func (m *BuildConfig) GetReleaseHelmRepository() *HelmChartRepository {
	if m != nil {
		return m.ReleaseHelmRepository
	}
	return nil
}

func (m *BuildConfig) GetTestHelmRepository() *HelmChartRepository {
	if m != nil {
		return m.TestHelmRepository
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*BuildConfig) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _BuildConfig_OneofMarshaler, _BuildConfig_OneofUnmarshaler, _BuildConfig_OneofSizer, []interface{}{
		(*BuildConfig_Gcloud)(nil),
	}
}

func _BuildConfig_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*BuildConfig)
	// ci_config
	switch x := m.CiConfig.(type) {
	case *BuildConfig_Gcloud:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gcloud); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("BuildConfig.CiConfig has unexpected type %T", x)
	}
	return nil
}

func _BuildConfig_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*BuildConfig)
	switch tag {
	case 10: // ci_config.gcloud
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GcloudConfig)
		err := b.DecodeMessage(msg)
		m.CiConfig = &BuildConfig_Gcloud{msg}
		return true, err
	default:
		return false, nil
	}
}

func _BuildConfig_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*BuildConfig)
	// ci_config
	switch x := m.CiConfig.(type) {
	case *BuildConfig_Gcloud:
		s := proto.Size(x.Gcloud)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GoConfig struct {
	Type GoProjectType `protobuf:"varint,1,opt,name=type,proto3,enum=build.solo.io.GoProjectType" json:"type,omitempty"`
	// If true, `go build ./...` will be invoked prior to other build steps (i.e. test runs, asset compilation)
	BuildAll             bool     `protobuf:"varint,2,opt,name=build_all,json=buildAll,proto3" json:"build_all,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoConfig) Reset()         { *m = GoConfig{} }
func (m *GoConfig) String() string { return proto.CompactTextString(m) }
func (*GoConfig) ProtoMessage()    {}
func (*GoConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{8}
}
func (m *GoConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoConfig.Unmarshal(m, b)
}
func (m *GoConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoConfig.Marshal(b, m, deterministic)
}
func (m *GoConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoConfig.Merge(m, src)
}
func (m *GoConfig) XXX_Size() int {
	return xxx_messageInfo_GoConfig.Size(m)
}
func (m *GoConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_GoConfig.DiscardUnknown(m)
}

var xxx_messageInfo_GoConfig proto.InternalMessageInfo

func (m *GoConfig) GetType() GoProjectType {
	if m != nil {
		return m.Type
	}
	return GoProjectType_GO_MOD
}

func (m *GoConfig) GetBuildAll() bool {
	if m != nil {
		return m.BuildAll
	}
	return false
}

type ContainerRegistry struct {
	// Types that are valid to be assigned to Registry:
	//	*ContainerRegistry_Quay
	//	*ContainerRegistry_DockerHub
	//	*ContainerRegistry_Gcr
	Registry             isContainerRegistry_Registry `protobuf_oneof:"registry"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ContainerRegistry) Reset()         { *m = ContainerRegistry{} }
func (m *ContainerRegistry) String() string { return proto.CompactTextString(m) }
func (*ContainerRegistry) ProtoMessage()    {}
func (*ContainerRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{9}
}
func (m *ContainerRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerRegistry.Unmarshal(m, b)
}
func (m *ContainerRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerRegistry.Marshal(b, m, deterministic)
}
func (m *ContainerRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerRegistry.Merge(m, src)
}
func (m *ContainerRegistry) XXX_Size() int {
	return xxx_messageInfo_ContainerRegistry.Size(m)
}
func (m *ContainerRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerRegistry proto.InternalMessageInfo

type isContainerRegistry_Registry interface {
	isContainerRegistry_Registry()
}

type ContainerRegistry_Quay struct {
	Quay *QuayRegistry `protobuf:"bytes,10,opt,name=quay,proto3,oneof"`
}
type ContainerRegistry_DockerHub struct {
	DockerHub *DockerHubRegistry `protobuf:"bytes,11,opt,name=docker_hub,json=dockerHub,proto3,oneof"`
}
type ContainerRegistry_Gcr struct {
	Gcr *GoogleContainerRegistry `protobuf:"bytes,12,opt,name=gcr,proto3,oneof"`
}

func (*ContainerRegistry_Quay) isContainerRegistry_Registry()      {}
func (*ContainerRegistry_DockerHub) isContainerRegistry_Registry() {}
func (*ContainerRegistry_Gcr) isContainerRegistry_Registry()       {}

func (m *ContainerRegistry) GetRegistry() isContainerRegistry_Registry {
	if m != nil {
		return m.Registry
	}
	return nil
}

func (m *ContainerRegistry) GetQuay() *QuayRegistry {
	if x, ok := m.GetRegistry().(*ContainerRegistry_Quay); ok {
		return x.Quay
	}
	return nil
}

func (m *ContainerRegistry) GetDockerHub() *DockerHubRegistry {
	if x, ok := m.GetRegistry().(*ContainerRegistry_DockerHub); ok {
		return x.DockerHub
	}
	return nil
}

func (m *ContainerRegistry) GetGcr() *GoogleContainerRegistry {
	if x, ok := m.GetRegistry().(*ContainerRegistry_Gcr); ok {
		return x.Gcr
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ContainerRegistry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ContainerRegistry_OneofMarshaler, _ContainerRegistry_OneofUnmarshaler, _ContainerRegistry_OneofSizer, []interface{}{
		(*ContainerRegistry_Quay)(nil),
		(*ContainerRegistry_DockerHub)(nil),
		(*ContainerRegistry_Gcr)(nil),
	}
}

func _ContainerRegistry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ContainerRegistry)
	// registry
	switch x := m.Registry.(type) {
	case *ContainerRegistry_Quay:
		_ = b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quay); err != nil {
			return err
		}
	case *ContainerRegistry_DockerHub:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DockerHub); err != nil {
			return err
		}
	case *ContainerRegistry_Gcr:
		_ = b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gcr); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ContainerRegistry.Registry has unexpected type %T", x)
	}
	return nil
}

func _ContainerRegistry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ContainerRegistry)
	switch tag {
	case 10: // registry.quay
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(QuayRegistry)
		err := b.DecodeMessage(msg)
		m.Registry = &ContainerRegistry_Quay{msg}
		return true, err
	case 11: // registry.docker_hub
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DockerHubRegistry)
		err := b.DecodeMessage(msg)
		m.Registry = &ContainerRegistry_DockerHub{msg}
		return true, err
	case 12: // registry.gcr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GoogleContainerRegistry)
		err := b.DecodeMessage(msg)
		m.Registry = &ContainerRegistry_Gcr{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ContainerRegistry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ContainerRegistry)
	// registry
	switch x := m.Registry.(type) {
	case *ContainerRegistry_Quay:
		s := proto.Size(x.Quay)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainerRegistry_DockerHub:
		s := proto.Size(x.DockerHub)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ContainerRegistry_Gcr:
		s := proto.Size(x.Gcr)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type QuayRegistry struct {
	BaseUrl              string   `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuayRegistry) Reset()         { *m = QuayRegistry{} }
func (m *QuayRegistry) String() string { return proto.CompactTextString(m) }
func (*QuayRegistry) ProtoMessage()    {}
func (*QuayRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{10}
}
func (m *QuayRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuayRegistry.Unmarshal(m, b)
}
func (m *QuayRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuayRegistry.Marshal(b, m, deterministic)
}
func (m *QuayRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuayRegistry.Merge(m, src)
}
func (m *QuayRegistry) XXX_Size() int {
	return xxx_messageInfo_QuayRegistry.Size(m)
}
func (m *QuayRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_QuayRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_QuayRegistry proto.InternalMessageInfo

func (m *QuayRegistry) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *QuayRegistry) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type DockerHubRegistry struct {
	BaseUrl              string   `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	Organization         string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DockerHubRegistry) Reset()         { *m = DockerHubRegistry{} }
func (m *DockerHubRegistry) String() string { return proto.CompactTextString(m) }
func (*DockerHubRegistry) ProtoMessage()    {}
func (*DockerHubRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{11}
}
func (m *DockerHubRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DockerHubRegistry.Unmarshal(m, b)
}
func (m *DockerHubRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DockerHubRegistry.Marshal(b, m, deterministic)
}
func (m *DockerHubRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DockerHubRegistry.Merge(m, src)
}
func (m *DockerHubRegistry) XXX_Size() int {
	return xxx_messageInfo_DockerHubRegistry.Size(m)
}
func (m *DockerHubRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_DockerHubRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_DockerHubRegistry proto.InternalMessageInfo

func (m *DockerHubRegistry) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *DockerHubRegistry) GetOrganization() string {
	if m != nil {
		return m.Organization
	}
	return ""
}

type GoogleContainerRegistry struct {
	BaseUrl string `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// The unique id of your Google Cloud project. Note that project id usually differs from project name.
	// https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects
	ProjectId            string   `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleContainerRegistry) Reset()         { *m = GoogleContainerRegistry{} }
func (m *GoogleContainerRegistry) String() string { return proto.CompactTextString(m) }
func (*GoogleContainerRegistry) ProtoMessage()    {}
func (*GoogleContainerRegistry) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{12}
}
func (m *GoogleContainerRegistry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleContainerRegistry.Unmarshal(m, b)
}
func (m *GoogleContainerRegistry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleContainerRegistry.Marshal(b, m, deterministic)
}
func (m *GoogleContainerRegistry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleContainerRegistry.Merge(m, src)
}
func (m *GoogleContainerRegistry) XXX_Size() int {
	return xxx_messageInfo_GoogleContainerRegistry.Size(m)
}
func (m *GoogleContainerRegistry) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleContainerRegistry.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleContainerRegistry proto.InternalMessageInfo

func (m *GoogleContainerRegistry) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *GoogleContainerRegistry) GetProjectId() string {
	if m != nil {
		return m.ProjectId
	}
	return ""
}

type HelmChartRepository struct {
	// Types that are valid to be assigned to RepositoryType:
	//	*HelmChartRepository_GoogleCloudStorage
	RepositoryType       isHelmChartRepository_RepositoryType `protobuf_oneof:"repository_type"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *HelmChartRepository) Reset()         { *m = HelmChartRepository{} }
func (m *HelmChartRepository) String() string { return proto.CompactTextString(m) }
func (*HelmChartRepository) ProtoMessage()    {}
func (*HelmChartRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{13}
}
func (m *HelmChartRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelmChartRepository.Unmarshal(m, b)
}
func (m *HelmChartRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelmChartRepository.Marshal(b, m, deterministic)
}
func (m *HelmChartRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelmChartRepository.Merge(m, src)
}
func (m *HelmChartRepository) XXX_Size() int {
	return xxx_messageInfo_HelmChartRepository.Size(m)
}
func (m *HelmChartRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_HelmChartRepository.DiscardUnknown(m)
}

var xxx_messageInfo_HelmChartRepository proto.InternalMessageInfo

type isHelmChartRepository_RepositoryType interface {
	isHelmChartRepository_RepositoryType()
}

type HelmChartRepository_GoogleCloudStorage struct {
	GoogleCloudStorage *GoogleCloudStorage `protobuf:"bytes,11,opt,name=google_cloud_storage,json=googleCloudStorage,proto3,oneof"`
}

func (*HelmChartRepository_GoogleCloudStorage) isHelmChartRepository_RepositoryType() {}

func (m *HelmChartRepository) GetRepositoryType() isHelmChartRepository_RepositoryType {
	if m != nil {
		return m.RepositoryType
	}
	return nil
}

func (m *HelmChartRepository) GetGoogleCloudStorage() *GoogleCloudStorage {
	if x, ok := m.GetRepositoryType().(*HelmChartRepository_GoogleCloudStorage); ok {
		return x.GoogleCloudStorage
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*HelmChartRepository) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _HelmChartRepository_OneofMarshaler, _HelmChartRepository_OneofUnmarshaler, _HelmChartRepository_OneofSizer, []interface{}{
		(*HelmChartRepository_GoogleCloudStorage)(nil),
	}
}

func _HelmChartRepository_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*HelmChartRepository)
	// repository_type
	switch x := m.RepositoryType.(type) {
	case *HelmChartRepository_GoogleCloudStorage:
		_ = b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GoogleCloudStorage); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("HelmChartRepository.RepositoryType has unexpected type %T", x)
	}
	return nil
}

func _HelmChartRepository_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*HelmChartRepository)
	switch tag {
	case 11: // repository_type.google_cloud_storage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GoogleCloudStorage)
		err := b.DecodeMessage(msg)
		m.RepositoryType = &HelmChartRepository_GoogleCloudStorage{msg}
		return true, err
	default:
		return false, nil
	}
}

func _HelmChartRepository_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*HelmChartRepository)
	// repository_type
	switch x := m.RepositoryType.(type) {
	case *HelmChartRepository_GoogleCloudStorage:
		s := proto.Size(x.GoogleCloudStorage)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GoogleCloudStorage struct {
	BucketUrl            string   `protobuf:"bytes,1,opt,name=bucket_url,json=bucketUrl,proto3" json:"bucket_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GoogleCloudStorage) Reset()         { *m = GoogleCloudStorage{} }
func (m *GoogleCloudStorage) String() string { return proto.CompactTextString(m) }
func (*GoogleCloudStorage) ProtoMessage()    {}
func (*GoogleCloudStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{14}
}
func (m *GoogleCloudStorage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleCloudStorage.Unmarshal(m, b)
}
func (m *GoogleCloudStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleCloudStorage.Marshal(b, m, deterministic)
}
func (m *GoogleCloudStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleCloudStorage.Merge(m, src)
}
func (m *GoogleCloudStorage) XXX_Size() int {
	return xxx_messageInfo_GoogleCloudStorage.Size(m)
}
func (m *GoogleCloudStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleCloudStorage.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleCloudStorage proto.InternalMessageInfo

func (m *GoogleCloudStorage) GetBucketUrl() string {
	if m != nil {
		return m.BucketUrl
	}
	return ""
}

type TestRun struct {
	// Types that are valid to be assigned to TestRun:
	//	*TestRun_Ginkgo
	TestRun              isTestRun_TestRun `protobuf_oneof:"test_run"`
	Args                 []string          `protobuf:"bytes,10,rep,name=args,proto3" json:"args,omitempty"`
	Env                  map[string]string `protobuf:"bytes,11,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SecretEnv            []string          `protobuf:"bytes,12,rep,name=secret_env,json=secretEnv,proto3" json:"secret_env,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TestRun) Reset()         { *m = TestRun{} }
func (m *TestRun) String() string { return proto.CompactTextString(m) }
func (*TestRun) ProtoMessage()    {}
func (*TestRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{15}
}
func (m *TestRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRun.Unmarshal(m, b)
}
func (m *TestRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRun.Marshal(b, m, deterministic)
}
func (m *TestRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRun.Merge(m, src)
}
func (m *TestRun) XXX_Size() int {
	return xxx_messageInfo_TestRun.Size(m)
}
func (m *TestRun) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRun.DiscardUnknown(m)
}

var xxx_messageInfo_TestRun proto.InternalMessageInfo

type isTestRun_TestRun interface {
	isTestRun_TestRun()
}

type TestRun_Ginkgo struct {
	Ginkgo *GinkgoTestRun `protobuf:"bytes,1,opt,name=ginkgo,proto3,oneof"`
}

func (*TestRun_Ginkgo) isTestRun_TestRun() {}

func (m *TestRun) GetTestRun() isTestRun_TestRun {
	if m != nil {
		return m.TestRun
	}
	return nil
}

func (m *TestRun) GetGinkgo() *GinkgoTestRun {
	if x, ok := m.GetTestRun().(*TestRun_Ginkgo); ok {
		return x.Ginkgo
	}
	return nil
}

func (m *TestRun) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *TestRun) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *TestRun) GetSecretEnv() []string {
	if m != nil {
		return m.SecretEnv
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TestRun) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TestRun_OneofMarshaler, _TestRun_OneofUnmarshaler, _TestRun_OneofSizer, []interface{}{
		(*TestRun_Ginkgo)(nil),
	}
}

func _TestRun_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TestRun)
	// test_run
	switch x := m.TestRun.(type) {
	case *TestRun_Ginkgo:
		_ = b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ginkgo); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TestRun.TestRun has unexpected type %T", x)
	}
	return nil
}

func _TestRun_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TestRun)
	switch tag {
	case 1: // test_run.ginkgo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GinkgoTestRun)
		err := b.DecodeMessage(msg)
		m.TestRun = &TestRun_Ginkgo{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TestRun_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TestRun)
	// test_run
	switch x := m.TestRun.(type) {
	case *TestRun_Ginkgo:
		s := proto.Size(x.Ginkgo)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type GinkgoTestRun struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GinkgoTestRun) Reset()         { *m = GinkgoTestRun{} }
func (m *GinkgoTestRun) String() string { return proto.CompactTextString(m) }
func (*GinkgoTestRun) ProtoMessage()    {}
func (*GinkgoTestRun) Descriptor() ([]byte, []int) {
	return fileDescriptor_05c5040d8276e5da, []int{16}
}
func (m *GinkgoTestRun) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GinkgoTestRun.Unmarshal(m, b)
}
func (m *GinkgoTestRun) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GinkgoTestRun.Marshal(b, m, deterministic)
}
func (m *GinkgoTestRun) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GinkgoTestRun.Merge(m, src)
}
func (m *GinkgoTestRun) XXX_Size() int {
	return xxx_messageInfo_GinkgoTestRun.Size(m)
}
func (m *GinkgoTestRun) XXX_DiscardUnknown() {
	xxx_messageInfo_GinkgoTestRun.DiscardUnknown(m)
}

var xxx_messageInfo_GinkgoTestRun proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("build.solo.io.GoProjectType", GoProjectType_name, GoProjectType_value)
	proto.RegisterType((*BuildRun)(nil), "build.solo.io.BuildRun")
	proto.RegisterType((*BuildRunConfig)(nil), "build.solo.io.BuildRunConfig")
	proto.RegisterType((*BuildEnvVars)(nil), "build.solo.io.BuildEnvVars")
	proto.RegisterType((*ComputedBuildVars)(nil), "build.solo.io.ComputedBuildVars")
	proto.RegisterType((*GcloudConfig)(nil), "build.solo.io.GcloudConfig")
	proto.RegisterMapType((map[string]string)(nil), "build.solo.io.GcloudConfig.EncryptedSecretsEntry")
	proto.RegisterType((*GoCache)(nil), "build.solo.io.GoCache")
	proto.RegisterType((*BuildSpec)(nil), "build.solo.io.BuildSpec")
	proto.RegisterType((*BuildConfig)(nil), "build.solo.io.BuildConfig")
	proto.RegisterType((*GoConfig)(nil), "build.solo.io.GoConfig")
	proto.RegisterType((*ContainerRegistry)(nil), "build.solo.io.ContainerRegistry")
	proto.RegisterType((*QuayRegistry)(nil), "build.solo.io.QuayRegistry")
	proto.RegisterType((*DockerHubRegistry)(nil), "build.solo.io.DockerHubRegistry")
	proto.RegisterType((*GoogleContainerRegistry)(nil), "build.solo.io.GoogleContainerRegistry")
	proto.RegisterType((*HelmChartRepository)(nil), "build.solo.io.HelmChartRepository")
	proto.RegisterType((*GoogleCloudStorage)(nil), "build.solo.io.GoogleCloudStorage")
	proto.RegisterType((*TestRun)(nil), "build.solo.io.TestRun")
	proto.RegisterMapType((map[string]string)(nil), "build.solo.io.TestRun.EnvEntry")
	proto.RegisterType((*GinkgoTestRun)(nil), "build.solo.io.GinkgoTestRun")
}

func init() { proto.RegisterFile("api/v1/build.proto", fileDescriptor_05c5040d8276e5da) }

var fileDescriptor_05c5040d8276e5da = []byte{
	// 1080 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdb, 0x6e, 0xdb, 0xb6,
	0x1b, 0x8f, 0x63, 0xc7, 0x96, 0x3e, 0x3b, 0x27, 0x36, 0x69, 0xf4, 0x4f, 0xff, 0x5d, 0x32, 0x61,
	0x87, 0x6e, 0x18, 0xdc, 0x39, 0x59, 0x8b, 0xa1, 0x77, 0x39, 0x18, 0x75, 0x31, 0x14, 0xcd, 0x98,
	0xa4, 0xd8, 0x7a, 0x51, 0x81, 0x96, 0x59, 0x46, 0x8b, 0x2c, 0x6a, 0x14, 0x65, 0xcc, 0xbb, 0xd9,
	0xd3, 0xec, 0x1d, 0xf6, 0x1a, 0x7b, 0x8c, 0x61, 0x97, 0x7b, 0x81, 0x81, 0x07, 0x25, 0xb6, 0xe4,
	0x0c, 0x1d, 0x76, 0x47, 0xfe, 0xf4, 0xe3, 0xef, 0xfb, 0xf8, 0x9d, 0x28, 0x40, 0x24, 0x8d, 0x1e,
	0x4f, 0x7a, 0x8f, 0x87, 0x79, 0x14, 0x8f, 0xba, 0xa9, 0xe0, 0x92, 0xa3, 0x55, 0xb3, 0xc9, 0x78,
	0xcc, 0xbb, 0x11, 0xf7, 0x39, 0x38, 0xc7, 0x0a, 0xc0, 0x79, 0x82, 0xbe, 0x80, 0x46, 0x96, 0xd2,
	0xd0, 0xab, 0xed, 0xd7, 0x1e, 0xb5, 0x0f, 0xbc, 0xee, 0x1c, 0xb3, 0xab, 0x69, 0xe7, 0x29, 0x0d,
	0xb1, 0x66, 0xa1, 0x27, 0xd0, 0x0c, 0x79, 0xf2, 0x2e, 0x62, 0xde, 0xb2, 0xe6, 0x3f, 0x5c, 0xc4,
	0xc7, 0x79, 0x72, 0xa2, 0x49, 0xd8, 0x92, 0xfd, 0x5f, 0x6b, 0xb0, 0x36, 0xff, 0x09, 0x1d, 0xc1,
	0x9a, 0x3e, 0x1a, 0xd0, 0x64, 0x12, 0x4c, 0x88, 0xc8, 0xac, 0x07, 0x0f, 0x16, 0x29, 0xf6, 0x93,
	0xc9, 0x6b, 0x22, 0x32, 0xdc, 0x19, 0xce, 0xec, 0xd0, 0x19, 0xdc, 0x0b, 0xf9, 0x38, 0xcd, 0x25,
	0x1d, 0x05, 0x46, 0x4b, 0xeb, 0x18, 0xcf, 0xf6, 0x4b, 0x3a, 0x27, 0x96, 0xa9, 0xf5, 0xb4, 0xd8,
	0x66, 0x58, 0x86, 0xfc, 0x33, 0xe8, 0xcc, 0xda, 0x43, 0xff, 0x03, 0xc7, 0x08, 0x47, 0x23, 0xed,
	0x9e, 0x8b, 0x5b, 0x7a, 0xff, 0x62, 0x84, 0x3e, 0x86, 0x35, 0x49, 0x18, 0xa3, 0xa3, 0x60, 0x42,
	0x45, 0x16, 0xf1, 0x44, 0xdb, 0x75, 0xf1, 0xaa, 0x41, 0x5f, 0x1b, 0xd0, 0xff, 0xad, 0x06, 0x9b,
	0x15, 0xd3, 0xc8, 0x83, 0x96, 0xa0, 0x31, 0x25, 0x19, 0xd5, 0xb2, 0x0e, 0x2e, 0xb6, 0xe8, 0x01,
	0xb8, 0xd1, 0x98, 0x30, 0x1a, 0x48, 0xc2, 0xac, 0xa2, 0xa3, 0x81, 0x0b, 0xc2, 0xd0, 0x67, 0xb0,
	0x11, 0xf2, 0x44, 0x92, 0x28, 0xa1, 0x22, 0x48, 0x05, 0x7d, 0x17, 0xfd, 0xe4, 0xd5, 0x35, 0x67,
	0xfd, 0x06, 0x3f, 0xd3, 0xb0, 0xb2, 0x50, 0xf8, 0xd5, 0x30, 0x8e, 0xdb, 0x2d, 0xfa, 0x14, 0xd6,
	0xaf, 0x68, 0x3c, 0x0e, 0x04, 0x4d, 0x79, 0x16, 0x49, 0x2e, 0xa6, 0xde, 0x8a, 0x66, 0xac, 0x29,
	0x18, 0xdf, 0xa0, 0xfe, 0x1f, 0xcb, 0xd0, 0x79, 0x1e, 0xc6, 0x3c, 0x1f, 0xd9, 0x94, 0x3d, 0x04,
	0x48, 0x05, 0xff, 0x81, 0x86, 0x52, 0xc5, 0xc3, 0xc8, 0xba, 0x16, 0x79, 0x31, 0x42, 0x7b, 0xd0,
	0x1e, 0xd1, 0x50, 0x4c, 0x53, 0x19, 0x5c, 0xd3, 0x42, 0x14, 0x2c, 0xf4, 0x0d, 0x9d, 0x2a, 0xcb,
	0x33, 0x04, 0x11, 0x25, 0xcc, 0x6b, 0x1a, 0xcb, 0xb7, 0x24, 0x85, 0xa2, 0xb7, 0xb0, 0x49, 0x13,
	0x8d, 0xd0, 0x51, 0x90, 0xd1, 0x50, 0x50, 0x99, 0x79, 0xad, 0xfd, 0xfa, 0xa3, 0xf6, 0x41, 0xaf,
	0x94, 0xd6, 0x59, 0x07, 0xbb, 0xfd, 0xe2, 0xd0, 0xb9, 0x39, 0xd3, 0x4f, 0xa4, 0x98, 0xe2, 0x0d,
	0x5a, 0x82, 0x55, 0x70, 0x64, 0x34, 0xa6, 0x3c, 0x97, 0x9e, 0x63, 0x82, 0x63, 0xb7, 0xa8, 0x07,
	0x0e, 0xe3, 0x41, 0x48, 0xc2, 0x2b, 0xea, 0xb9, 0xba, 0x8e, 0xee, 0x97, 0x0d, 0xf2, 0x13, 0xf5,
	0x15, 0xb7, 0x98, 0x59, 0xec, 0x9e, 0xc0, 0xf6, 0x42, 0xbb, 0x68, 0x03, 0xea, 0x2a, 0x0e, 0xa6,
	0x6e, 0xd4, 0x12, 0x6d, 0xc1, 0xca, 0x84, 0xc4, 0x39, 0xb5, 0x89, 0x35, 0x9b, 0x67, 0xcb, 0x5f,
	0xd7, 0xfc, 0x27, 0xd0, 0xb2, 0xc2, 0xe8, 0x3e, 0x34, 0x87, 0x79, 0x78, 0x4d, 0xa5, 0x3d, 0x69,
	0x77, 0x08, 0x41, 0x23, 0x21, 0xe3, 0xe2, 0xac, 0x5e, 0xfb, 0x12, 0xdc, 0x9b, 0x0e, 0x45, 0x07,
	0x37, 0xbd, 0x69, 0x3a, 0x69, 0x77, 0x51, 0x27, 0xcd, 0x37, 0x26, 0x3a, 0x04, 0x57, 0xd2, 0x4c,
	0x06, 0x22, 0x4f, 0x32, 0x6f, 0x45, 0x47, 0xb8, 0x7c, 0xe1, 0x0b, 0x9a, 0x49, 0x9c, 0x27, 0xd8,
	0x91, 0x66, 0x91, 0xf9, 0x7f, 0xd5, 0xa1, 0x3d, 0x23, 0x86, 0xbe, 0x02, 0x57, 0x05, 0x6d, 0xd6,
	0xf6, 0x4e, 0x35, 0x6a, 0xc6, 0xb0, 0xc3, 0xec, 0x4a, 0x8d, 0x12, 0xa6, 0x93, 0xe7, 0xc1, 0xc2,
	0xc6, 0x9f, 0xcd, 0xec, 0x60, 0x09, 0x5b, 0x32, 0x7a, 0x0b, 0xbb, 0xb6, 0x57, 0x82, 0xdb, 0x5e,
	0x10, 0x94, 0x45, 0x99, 0x14, 0x53, 0x6f, 0xeb, 0x8e, 0xde, 0xb7, 0x44, 0x6c, 0x79, 0xd8, 0xb3,
	0x1a, 0x95, 0x2f, 0xe8, 0x3b, 0xd8, 0xd1, 0x11, 0x59, 0x20, 0xbe, 0xfd, 0x9e, 0xe2, 0xdb, 0x4a,
	0xa0, 0xaa, 0xfc, 0x06, 0x76, 0x0a, 0xcf, 0xcb, 0x0d, 0xf8, 0x81, 0x56, 0xf6, 0x4b, 0xca, 0x03,
	0x1a, 0x8f, 0x4f, 0xae, 0x88, 0x90, 0xb7, 0x4d, 0x89, 0xb7, 0xad, 0xc4, 0x60, 0xae, 0x57, 0xd1,
	0x05, 0x6c, 0x69, 0xaf, 0xcb, 0xc2, 0x7b, 0xef, 0x2d, 0x8c, 0xd4, 0xf9, 0x79, 0xd5, 0xe3, 0x36,
	0xb8, 0x61, 0x64, 0x13, 0xeb, 0x7f, 0x0f, 0x4e, 0x91, 0x45, 0xf4, 0x25, 0x34, 0xe4, 0x34, 0x35,
	0xc3, 0x6b, 0xed, 0xe0, 0xff, 0x95, 0x64, 0x9f, 0x99, 0xa1, 0x70, 0x31, 0x4d, 0x29, 0xd6, 0x4c,
	0x35, 0xd7, 0xcc, 0x24, 0x25, 0x71, 0xac, 0x4b, 0xd8, 0xc1, 0x66, 0xb4, 0x1e, 0xc5, 0xb1, 0xff,
	0xbb, 0x1e, 0x92, 0xe5, 0x78, 0xf5, 0xa0, 0xf1, 0x63, 0x4e, 0xa6, 0x77, 0x94, 0xc7, 0xb7, 0x39,
	0x99, 0x16, 0xd4, 0xc1, 0x12, 0xd6, 0x54, 0x74, 0x04, 0x30, 0xe2, 0xe1, 0x35, 0x15, 0xc1, 0x55,
	0x3e, 0xf4, 0xda, 0x0b, 0xf3, 0x75, 0xaa, 0x09, 0x83, 0x7c, 0x38, 0x73, 0xda, 0x1d, 0x15, 0x20,
	0x7a, 0x06, 0x75, 0x16, 0x0a, 0xaf, 0xa3, 0xcf, 0x7e, 0x52, 0xb9, 0x19, 0x67, 0x71, 0xb5, 0x68,
	0x06, 0x4b, 0x58, 0x1d, 0x3a, 0x06, 0x70, 0x8a, 0x62, 0xf1, 0x5f, 0x42, 0x67, 0xd6, 0x45, 0xfd,
	0x94, 0xa8, 0xd4, 0xe7, 0x22, 0xbe, 0x79, 0x4a, 0x48, 0x46, 0x2f, 0x45, 0x8c, 0x7c, 0xe8, 0x70,
	0xc1, 0x48, 0x12, 0xfd, 0x4c, 0xe4, 0xed, 0x43, 0x32, 0x87, 0xf9, 0x18, 0x36, 0x2b, 0x8e, 0xff,
	0x57, 0xcd, 0x73, 0xd8, 0xb9, 0xe3, 0x42, 0xff, 0xa4, 0x3c, 0xff, 0x0a, 0x2c, 0x97, 0x5e, 0x01,
	0xff, 0x17, 0xb8, 0xb7, 0xa0, 0xbc, 0xd0, 0x25, 0x6c, 0x31, 0x6d, 0x2b, 0xd0, 0x6d, 0x1c, 0x64,
	0x92, 0x0b, 0xc2, 0xa8, 0xcd, 0xd1, 0x87, 0x8b, 0xe3, 0xac, 0x98, 0xe7, 0x86, 0x38, 0x58, 0xc2,
	0x88, 0x55, 0xd0, 0xe3, 0x4d, 0x58, 0xbf, 0xad, 0xf6, 0x40, 0x55, 0x9a, 0x7f, 0x08, 0xa8, 0x7a,
	0x5c, 0x79, 0x6d, 0xe6, 0xe8, 0xcc, 0x95, 0x5c, 0x83, 0x5c, 0x8a, 0xd8, 0xff, 0xb3, 0x06, 0x2d,
	0x3b, 0xe8, 0xd0, 0x53, 0x68, 0xb2, 0x28, 0xb9, 0x66, 0xdc, 0xce, 0xb2, 0x4a, 0x79, 0xeb, 0x8f,
	0x96, 0xad, 0x27, 0x93, 0x06, 0xd4, 0x80, 0x26, 0x82, 0x65, 0x1e, 0xec, 0xd7, 0xd5, 0x80, 0x56,
	0x6b, 0xd4, 0x83, 0x3a, 0x4d, 0x26, 0x5e, 0x5b, 0x4f, 0xd6, 0xbd, 0xc5, 0x93, 0xb5, 0xdb, 0x4f,
	0x26, 0xe6, 0xa5, 0x52, 0x5c, 0xe5, 0xa9, 0x79, 0xf2, 0xd4, 0x9f, 0x91, 0xd7, 0xd1, 0x62, 0xae,
	0x41, 0xfa, 0xc9, 0x64, 0xf7, 0x29, 0x38, 0x05, 0xff, 0xdf, 0xbc, 0x30, 0xaa, 0x36, 0x8b, 0x49,
	0xef, 0xaf, 0xc3, 0xea, 0xdc, 0x25, 0x3e, 0xff, 0x08, 0x56, 0xe7, 0x9a, 0x16, 0x01, 0x34, 0x9f,
	0xbf, 0x0a, 0x5e, 0xbe, 0x3a, 0xdd, 0x58, 0x42, 0x2d, 0xa8, 0x9f, 0xf6, 0xcf, 0x36, 0x6a, 0xc7,
	0x8d, 0x37, 0xcb, 0x93, 0xde, 0xb0, 0xa9, 0x7f, 0x29, 0x0f, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff,
	0x38, 0x11, 0x15, 0xb2, 0x68, 0x0a, 0x00, 0x00,
}
